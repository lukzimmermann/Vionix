"""initial schema

Revision ID: 1402f903a8c0
Revises: 
Create Date: 2025-05-19 15:24:37.263452

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from pgvector.sqlalchemy import Vector
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1402f903a8c0'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.execute("CREATE EXTENSION IF NOT EXISTS vector")
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sources',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.Enum('YOUTUBE_CHANNEL', 'YOUTUBE_PLAYLIST', 'MANUAL_UPLOAD', name='source_type'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('worker_logs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('level', sa.Enum('DEBUG', 'INFO', 'WARNING', 'ERROR', name='log_level_enum'), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('logger_name', sa.String(length=255), nullable=True),
    sa.Column('filename', sa.String(length=255), nullable=True),
    sa.Column('func_name', sa.String(length=255), nullable=True),
    sa.Column('line_no', sa.Integer(), nullable=True),
    sa.Column('process', sa.BigInteger(), nullable=True),
    sa.Column('thread', sa.BigInteger(), nullable=True),
    sa.Column('exception', sa.Text(), nullable=True),
    sa.Column('pathname', sa.String(length=1024), nullable=True),
    sa.Column('module', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_worker_logs_created_at'), 'worker_logs', ['created_at'], unique=False)
    op.create_index(op.f('ix_worker_logs_level'), 'worker_logs', ['level'], unique=False)
    op.create_table('manual_upload_sources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['sources.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('videos',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.Column('external_id', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('author', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('length', sa.Integer(), nullable=False),
    sa.Column('thumbnail_url', sa.String(), nullable=False),
    sa.Column('thumbnail_path', sa.String(), nullable=True),
    sa.Column('video_path', sa.String(), nullable=False),
    sa.Column('audio_path', sa.String(), nullable=False),
    sa.Column('language', sa.String(), nullable=True),
    sa.Column('transcription', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('published_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['source_id'], ['sources.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('youtube_channel_sources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('channel_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('thumbnail_url', sa.String(), nullable=False),
    sa.Column('thumbnail_path', sa.String(), nullable=True),
    sa.Column('auto_download', sa.Boolean(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['sources.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('youtube_playlist_sources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('playlist_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('owner', sa.String(), nullable=False),
    sa.Column('thumbnail_url', sa.String(), nullable=False),
    sa.Column('thumbnail_path', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['sources.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chunks',
    sa.Column('video_id', sa.Integer(), nullable=False),
    sa.Column('start', sa.Float(), nullable=False),
    sa.Column('end', sa.Float(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('embedding', Vector(dim=1536), nullable=False),
    sa.ForeignKeyConstraint(['video_id'], ['videos.id'], ),
    sa.PrimaryKeyConstraint('video_id', 'start')
    )
    op.create_table('video_stats',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('video_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('views', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['video_id'], ['videos.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('video_stats')
    op.drop_table('chunks')
    op.drop_table('youtube_playlist_sources')
    op.drop_table('youtube_channel_sources')
    op.drop_table('videos')
    op.drop_table('manual_upload_sources')
    op.drop_index(op.f('ix_worker_logs_level'), table_name='worker_logs')
    op.drop_index(op.f('ix_worker_logs_created_at'), table_name='worker_logs')
    op.drop_table('worker_logs')
    op.drop_table('sources')
    # ### end Alembic commands ###
